{"version":3,"sources":["config/menuConfig.js","redux/action-type.js","api/ajax.js","api/index.js","utils/storageUtils.js","redux/actions.js","components/left-nav/left-nav.jsx","utils/formateDate.js","components/link-button/index.jsx","components/header/header.jsx","pages/home/line.jsx","pages/home/bar.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","utils/constants.js","pages/category/category.jsx","pages/product/home.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","pages/login/login.jsx","App.jsx","redux/reducer.js","redux/store.js","index.js","assets/images/logo.png"],"names":["menuList","title","key","icon","isPublic","children","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","ADD_PRODUCT","ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","axios","get","params","then","post","response","catch","error","message","reqLogin","username","password","concat","reqWeather","city","resovle","jsonp","err","status","_data$results$0$weath","results","weather_data","dayPictureUrl","weather","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","_ref","categoryId","reqProducts","pageNum","pageSize","reqSearchProducts","_ref2","searchName","searchType","Object","defineProperty","reqCategory","reqUpdateStatus","productId","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","user","storageUtils","store","set","remove","setHeadTitle","headTitle","receiveUser","logout","addProduct","SubMenu","LeftNav","hasAuth","item","menus","_this","props","indexOf","find","child","getMenuNodes","path","location","pathname","reduce","pre","cItem","openKey","push","react_default","a","createElement","menu","Item","react_router_dom","to","onClick","this","menuNode","className","src","logo","alt","selectedKeys","defaultOpenKeys","mode","theme","Component","connect","state","withRouter","formateDate","time","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","formate","LinkButton","assign","confirm","Header","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","_callee","result","regenerator_default","wrap","_context","prev","next","sent","stop","logOut","content","okText","cancelText","onOk","clearInterval","_this$state","Line","dv","DataSet","createView","source","b","c","transform","fields","value","style","float","width","height","BizCharts","scale","range","forceFit","label","formatter","val","crosshairs","position","size","color","shape","stroke","lineWidth","React","Bar","marginLeft","sales","tickInterval","RangePicker","Home","isVisited","handleChange","card","extra","headStyle","statistic","suffix","fontWeight","valueStyle","fontSize","prefix","line_Line","defaultValue","moment","format","bodyStyle","padding","bar_Bar","timeline","es_form","Option","es_select","AddForm","setForm","form","_this$props","categorys","getFieldDecorator","initialValue","map","rules","required","input","placeholder","WrapAddForm","create","UpdateForm","update_form_Item","PAGE_SIZE","BASE_IMG_URL","Category","subCategorys","loading","parentName","showStatus","initcolumns","columns","dataIndex","render","category","showUpdate","showSubCategorys","getCategorys","showCategorys","handleCancel","resetFields","showAdd","addCategory","validateFields","asyncToGenerator","mark","_callee2","values","_context2","_x2","_x3","apply","updateCategory","_ref3","_callee3","_context3","_x4","_x5","_this2","marginRight","es_button","table","dataSource","bordered","rowKey","pagination","defaultPageSize","showQuickJumper","modal","visible","onCancel","add_form","update_form","ProductHome","total","products","initColumns","price","newStatus","updateStatus","showDetail","history","getProducts","_result$data","list","success","_this$state2","onChange","home_Option","margin","event","target","current","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","previewVisible","previewImage","fileList","getImgs","handlePreview","preview","originFileObj","_x","imgs","img","index","uid","uploadButton","upload","action","accept","listType","onPreview","footer","RichTextEditor","onEditorStateChange","editorState","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","react_draft_wysiwyg","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAppUpdate","options","initOption","_assertThisInitialize","isUpdate","pCategoryId","childOptions","isLeaf","assertThisInitialized","option","abrupt","submit","desc","categoryIds","pw","editor","goBack","validatePrice","rule","callback","loadData","_ref4","_callee4","selectedOptions","targetOption","_context4","toConsumableArray","createRef","labelCol","span","wrapperCol","add_update_Item","autosize","minRows","validator","addonAfter","cascader","pictures_wall_PicturesWall","ref","rich_text_editor_RichTextEditor","ProductDetail","cName1","cName2","all","_this$props$product2","es_list","detail_Item","dangerouslySetInnerHTML","__html","Product","react_router","component","exact","add_form_Item","TreeNode","AuthForm","getMenus","checkedKeys","getTreeNodes","onCheck","console","log","treeNodes","nextProps","auth_form_Item","disabled","tree","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowAuth","initColumn","create_time","onRow","getRoles","addRole","updateRole","auth","auth_time","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","role_add_form","auth_form_AuthForm","UserForm","validatorPwd","test","user_form_Item","whitespace","min","max","pattern","phone","email","user_form_Option","PureComponent","User","users","isShow","roleNames","deleteUser","addOrUpdateUser","getFieldsValue","getUsers","initRoleNames","_onOk","user_form","stores","getOption","text","tooltip","legend","xAxis","yAxis","series","update","sale","lib_default","Pie","subtext","x","trigger","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","getOption1","getOption2","NotFound","goHome","replace","row","col","Footer","Sider","Content","Admin","layout","left_nav_left_nav","header_header","from","textAlign","Login","handleSubmit","preventDefault","login","errorMsg","onSubmit","htmlType","WrapLogin","dispatch","msg","App","initHeadTitle","initUser","combineReducers","objectSpread","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","App_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ef495eba.chunk.js","sourcesContent":["const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      },\r\n    ]\r\n  },\r\n\r\n  // {\r\n  //   title: '订单管理',\r\n  //   key: '/order',\r\n  //   icon: 'windows',\r\n  // },\r\n]\r\n\r\nexport default menuList","/*\r\n一些action-type常量\r\n*/\r\nexport const SET_HEAD_TITLE = 'setHeadTitle' // 设置头部标题\r\nexport const RECEIVE_USER = 'receive_user' // 接收用户信息\r\nexport const SHOW_ERROR_MSG = 'show_error_msg' // 显示错误信息\r\nexport const RESET_USER = 'reset_user' // 重置用户信息\r\nexport const ADD_PRODUCT = 'add_product'//添加商品","/*\r\n能发送ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1:统一处理请求异常?\r\n    方法:在外层包一个自己的创建的Promise对象\r\n    在请求出错时，不reject(error)，而是显示错误提示(用antd的message组件)\r\n2. 优化2: 异步得到不是response，而是result:resolve(response.data)    \r\n*/\r\n\r\n\r\n/*\r\n接口由4个部分组成，其中3个部分（url，type，data(参数)）决定请求，第4个是响应格式\r\n*/\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\nexport default function ajax(url, data = {}, type = 'GET') {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    // 1. 执行异步ajax请求\r\n    if (type === 'GET') { // get请求\r\n      promise = axios.get(url, { // 配置对象\r\n        params: data // 指定请求参数\r\n      }).then()\r\n    } else { // post请求\r\n      promise = axios.post(url, data)\r\n    }\r\n\r\n    // 2. 如果成功，调用resolve(value)\r\n    promise.then(response => {\r\n      // 异步得到不是response，而是result:resolve(response.data),在调用函数发请求的时候，成功时直接拿到result\r\n      resolve(response.data)\r\n    })\r\n\r\n      // 3. 如果失败，不调用reject(reason)，而是提示异常信息\r\n      .catch(error => {\r\n        message.error('请求出错了:' + error.message)\r\n      })\r\n  })\r\n\r\n}\r\n\r\n// 请求登录的接口\r\n// ajax('http://localhost:5000/login',{username:'admin',password:'admin'},'POST').then()","/*\r\n要求:根据接口文档定义接口请求函数\r\n包含应用中所有接口请求函数的模块\r\n每个接口函数的返回值都是promise\r\n*/\r\nimport ajax from './ajax'\r\n// export function reqLogin(username,password){\r\n//   return ajax('/login',{username,password},'POST')\r\n// }\r\nimport jsonp from 'jsonp'\r\nimport { message } from 'antd'\r\n\r\nconst BASE = ''\r\n// 登录请求\r\nexport const reqLogin = (username, password) => ajax(`${BASE}/login`, { username, password }, 'POST')\r\n\r\n// 获取天气信息\r\n/*\r\njsonp请求的接口请求函数\r\n*/\r\nexport const reqWeather = (city) => {\r\n  return new Promise((resovle, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    jsonp(url, {}, (err, data) => {\r\n      if (!err && data.status === 'success') {// 成功\r\n        // 取出需要的数据(天气图片，和天气状况)\r\n        const { dayPictureUrl, weather } = data.results[0].weather_data[0]\r\n        resovle({ dayPictureUrl, weather })\r\n      } else { // 失败\r\n        message.error('获取天气信息失败:' + err)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// 获取一级或某个二级分类的列表\r\nexport const reqCategorys = (parentId) => ajax(BASE + '/manage/category/list', { parentId })//type 的默认值是GET\r\n\r\n// 添加分类\r\nexport const reqAddCategory = (categoryName, parentId) => ajax(BASE + '/manage/category/add', { categoryName, parentId }, 'POST')\r\n\r\n// 更新分类\r\nexport const reqUpdateCategory = ({ categoryName, categoryId }) => ajax(BASE + '/manage/category/update', { categoryName, categoryId }, 'POST')\r\n\r\n// 获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', { pageNum, pageSize })\r\n\r\n// 搜索产品分页列表(根据商品名称/商品描述搜索)\r\n// (searchType:搜索的类型，productName/productDesc)   [searchType]这种写法，代表的是searchType这个属性的值，也就是[searchType]是productName，productDesc其中一个\r\nexport const reqSearchProducts = ({ pageNum, pageSize, searchName, searchType }) => ajax(BASE + '/manage/product/search', { pageNum, pageSize, [searchType]: searchName })\r\n\r\n// 获取一个分类\r\nexport const reqCategory = (categoryId) => ajax(BASE + '/manage/category/info', { categoryId })\r\n\r\n// 对商品进行上架/下架处理\r\nexport const reqUpdateStatus = (productId, status) => ajax(BASE + '/manage/product/updateStatus', { productId, status }, 'POST')\r\n\r\n// 删除图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete', { name }, 'POST')\r\n\r\n// 添加/更新商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/' + (product._id ? 'update' : 'add'), product, 'POST')\r\n\r\n// 获取所有角色列表\r\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\r\n\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add', { roleName }, 'POST')\r\n\r\n// 更新角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update', role, 'POST')\r\n\r\n// 获取所有用户列表\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n\r\n// 删除用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', { userId }, 'POST')\r\n\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/'+ (user._id?'update':'add'), user, 'POST')","import store from 'store'\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n  saveUser(user){\r\n    store.set(USER_KEY,user)\r\n  },\r\n  getUser(){\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n  removeUser(){\r\n    store.remove(USER_KEY)\r\n  }\r\n}","/*\r\naction Creators\r\n*/\r\nimport { SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG, RESET_USER, ADD_PRODUCT } from './action-type'\r\nimport { reqLogin } from '../api'\r\nimport storageUtils from '../utils/storageUtils'\r\n\r\n/*\r\n设置头部标题的同步action\r\n*/\r\nexport const setHeadTitle = (headTitle) => ({ type: SET_HEAD_TITLE, data: headTitle })\r\n\r\n/*\r\n接收用户的同步action\r\n */\r\nexport const receiveUser = (user) => ({ type: RECEIVE_USER, user })\r\n\r\n/*\r\n显示错误信息同步的action\r\n*/\r\nexport const showErrorMsg = (errorMsg) => ({ type: SHOW_ERROR_MSG, errorMsg })\r\n\r\n/*\r\n实现登出的action\r\n*/\r\nexport const logout = () => {\r\n  // 先清除localstorage中的user\r\n  storageUtils.removeUser()\r\n  return { type: RESET_USER }\r\n}\r\n\r\n/*\r\n添加商品的同步action\r\n*/\r\nexport const addProduct = (product) => ({ type: ADD_PRODUCT, product })\r\n\r\n/*\r\n实现登录的异步action \r\n*/\r\nexport const login = (username, password) => async dispatch => {\r\n  // 1.执行异步ajax请求\r\n  const result = await reqLogin(username, password)\r\n  // 2.1 如果成功了，分发成功的同步action\r\n  if (result.status === 0) {\r\n    const user = result.data\r\n    // user还要保存到localstorage中\r\n    storageUtils.saveUser(user)\r\n    // 分发接收用户的同步action\r\n    dispatch(receiveUser(user))\r\n  } else { // 2.2 如果失败了，分发失败的同步action\r\n    const msg = result.msg\r\n    dispatch(showErrorMsg(msg))\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport './index.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport { Menu, Icon } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { setHeadTitle } from '../../redux/actions'\r\nconst { SubMenu } = Menu;\r\nclass LeftNav extends Component {\r\n\r\n  /*\r\n  当前登录用户对item是否有权限\r\n  */\r\n  hasAuth = (item) => {\r\n    // item是菜单项\r\n    const { key, isPublic } = item\r\n\r\n    const menus = this.props.user.role.menus\r\n    const username = this.props.user.username\r\n    /*\r\n    1. 如果当前用户是admin\r\n    2. 如果当前item是公开的\r\n    3. 当前用户有此item的权限:key有没有menus中\r\n     */\r\n    if (username === 'admin' || isPublic || menus.indexOf(key) !== -1) {\r\n      return true\r\n    } else if (item.children) { // 4. 如果当前用户有此item的某个item权限\r\n      return !!item.children.find(child => menus.indexOf(child.key) !== -1)\r\n    }\r\n  }\r\n\r\n  /*使用reduce() + 递归*/\r\n  getMenuNodes = (menuList) => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname\r\n    return menuList.reduce((pre, item) => {\r\n      // 如果当前用户有item对应的权限,才需要显示对应的菜单项\r\n      if (this.hasAuth(item)) {\r\n        if (item.key === path || path.indexOf(item.key) === 0){\r\n          this.props.setHeadTitle(item.title)\r\n        }\r\n          if (!item.children) {\r\n            // 向pre中添加<Menu.Item>\r\n            pre.push((\r\n              <Menu.Item key={item.key}>\r\n                <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\r\n                  <Icon type={item.icon} />\r\n                  <span>{item.title}</span>\r\n                </Link>\r\n              </Menu.Item>\r\n            ))\r\n          } else {\r\n            // 查找一个与当前请求路径匹配的子Item\r\n            const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0) // 判断cItem.key是不是以/product开头\r\n            // 如果存在，说明当前item的子列表需要打开\r\n            if (cItem) this.openKey = item.key\r\n\r\n            // 向pre中添加<SubMenu.Item>\r\n            pre.push((\r\n              <SubMenu\r\n                key={item.key}\r\n                title={\r\n                  <span>\r\n                    <Icon type={item.icon} />\r\n                    <span>{item.title}</span>\r\n                  </span>\r\n                }\r\n              >\r\n                {/* 递归调用 */\r\n                  this.getMenuNodes(item.children)\r\n                }\r\n              </SubMenu>\r\n            ))\r\n          }\r\n      }\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  // 在第一次render()之前执行一次\r\n  // 为第一次render()准备数据(必须同步)\r\n  componentWillMount() {\r\n    this.menuNode = this.getMenuNodes(menuList)\r\n  }\r\n\r\n  render() {\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname\r\n    if (path.indexOf('/product') === 0) {// 当前的是商品或其子路由界面(/product/detail)\r\n      path = '/product' //让product的子路由也匹配/product路径\r\n    }\r\n    const openKey = this.openKey\r\n    return (\r\n      <div className='left-nav'>\r\n        <Link to='/home' className='left-nav-header'>\r\n          <img src={logo} alt=\"logo\" />\r\n          <h2>react 后台</h2>\r\n        </Link>\r\n        <Menu\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n        >\r\n          {this.menuNode}\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  state => ({ user:state.user }),\r\n  { setHeadTitle }\r\n)(withRouter(LeftNav))","// 时间格式化函数\r\nexport default function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  let year = date.getFullYear()\r\n  let month = date.getMonth() + 1\r\n  let day = date.getDate()\r\n  let hours = date.getHours()\r\n  let minutes = date.getMinutes()\r\n  let seconds = date.getSeconds()\r\n\r\n  // 个位数字补零函数\r\n  const formate = (time) => time = time < 10 ? '0' + time : time\r\n\r\n  month = formate(month)\r\n  day = formate(day)\r\n  hours = formate(hours)\r\n  minutes = formate(minutes)\r\n  seconds = formate(seconds)\r\n  // 返回一个格式为 YYYY-MM-DD hh-mm-ss 的时间字符串\r\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\r\n}","import React from 'react'\r\nimport './index.less'\r\n\r\nexport default function LinkButton(props){\r\n  return <button {...props} className='link-button'>{props.children}</button>\r\n} ","import React, { Component } from 'react'\r\nimport './index.less'\r\nimport { reqWeather } from '../../api'\r\nimport formateDate from '../../utils/formateDate'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Modal } from 'antd'\r\nimport LinkButton from '../link-button'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../redux/actions'\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass Header extends Component {\r\n\r\n  state = {\r\n    currentTime: formateDate(Date.now()),\r\n    dayPictureUrl: '',\r\n    weather: ''\r\n  }\r\n\r\n  getTime = () => {\r\n    // 每隔一秒获取当前时间，并更新状态数据\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = formateDate(Date.now())\r\n      // 更新状态\r\n      this.setState({ currentTime })\r\n    }, 1000)\r\n  }\r\n  getWeather = async () => {\r\n    const result = await reqWeather('茂名')\r\n    const { dayPictureUrl, weather } = result\r\n    // 更新状态\r\n    this.setState({ dayPictureUrl, weather })\r\n  }\r\n\r\n  /*\r\n  getTitle = () => {\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname\r\n    let title\r\n    menuList.forEach(item => {\r\n      if (item.key === path) {\r\n        title = item.title//外层item\r\n      } else if (item.children) {//内层item，item.children\r\n        // 在所有的子item中查找匹配的\r\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\r\n        if (cItem) {//如果有值说明能匹配\r\n          title = cItem.title\r\n        }\r\n      }\r\n    })\r\n    return title\r\n  }\r\n  */\r\n\r\n\r\n  // 退出登录\r\n  logOut = () => {\r\n    //显示确认框\r\n    confirm({\r\n      content: '确定退出吗?',\r\n      okText: '确定',\r\n      cancelText: '取消',\r\n      onOk: () => { // 注意这里的this指向,最好改成箭头函数\r\n        this.props.logout()\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    // 获取当前时间\r\n    this.getTime()\r\n    // 获取当前天气\r\n    this.getWeather()\r\n  }\r\n\r\n  /* \r\n  当前组件销毁之前的生命周期函数\r\n  */\r\n  componentWillUnmount() {\r\n    // 清除获取当前时间定时器\r\n    clearInterval(this.intervalId)\r\n  }\r\n  render() {\r\n    const { currentTime, dayPictureUrl, weather } = this.state\r\n    const { username } = this.props.user\r\n    const title = this.props.headTitle\r\n    return (\r\n      <div className='header'>\r\n        <div className='header'>\r\n          <div className=\"header-top\">\r\n            <span>欢迎,{username}</span>\r\n            <LinkButton onClick={this.logOut}>退出</LinkButton>\r\n          </div>\r\n          <div className=\"header-bottom\">\r\n            <div className='header-bottom-left'>{title}</div>\r\n            <div className='header-bottom-right'>\r\n              <span>{currentTime}</span>\r\n              <img src={dayPictureUrl} alt=\"weather\" />\r\n              <span>{weather}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  state => ({ headTitle: state.headTitle, user: state.user }),\r\n  { logout }\r\n)(withRouter(Header))","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\"\r\nimport DataSet from \"@antv/data-set\"\r\n\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ]\r\n    const ds = new DataSet()\r\n    const dv = ds.createView().source(data)\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key字段\r\n      value: \"temperature\" // value字段\r\n    })\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    }\r\n    return (\r\n      <div style={{float: 'right', width: 750, height: 300}}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend/>\r\n          <Axis name=\"month\"/>\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n} from \"bizcharts\"\r\n\r\nexport default class Bar extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"2月\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"3月\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"4月\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"5月\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"6月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"7月\",\r\n        sales: 28\r\n      },\r\n      {\r\n        year: \"8月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"59月\",\r\n        sales: 68\r\n      },\r\n      {\r\n        year: \"10月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"11月\",\r\n        sales: 58\r\n      },\r\n      {\r\n        year: \"12月\",\r\n        sales: 38\r\n      }\r\n    ]\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    }\r\n    return (\r\n      <div style={{width: '100%', marginLeft: -30}}>\r\n        <Chart height={338} data={data} scale={cols} forceFit>\r\n          <Axis name=\"year\"/>\r\n          <Axis name=\"sales\"/>\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom type=\"interval\" position=\"year*sales\"/>\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Icon,\r\n  Card,\r\n  Statistic,\r\n  DatePicker,\r\n  Timeline\r\n} from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport Line from './line'\r\nimport Bar from './bar'\r\nimport './home.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst {RangePicker} = DatePicker\r\n\r\nexport default class Home extends Component {\r\n\r\n  state = {\r\n    isVisited: true\r\n  }\r\n\r\n  handleChange = (isVisited) => {\r\n    return () => this.setState({isVisited})\r\n  }\r\n\r\n  render() {\r\n    const {isVisited} = this.state\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Card\r\n          className=\"home-card\"\r\n          title=\"商品总量\"\r\n          extra={<Icon style={{color: 'rgba(0,0,0,.45)'}} type=\"question-circle\"/>}\r\n          style={{width: 250}}\r\n          headStyle={{color: 'rgba(0,0,0,.45)'}}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix=\"个\"\r\n            style={{fontWeight: 'bolder'}}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'周同比'}\r\n            suffix={<div>%<Icon style={{color: 'red', marginLeft: 10}} type=\"arrow-down\"/></div>}\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'日同比'}\r\n            suffix={<div>%<Icon style={{color: '#3f8600', marginLeft: 10}} type=\"arrow-up\"/></div>}\r\n          />\r\n        </Card>\r\n\r\n        <Line/>\r\n\r\n        <Card\r\n          className=\"home-content\"\r\n          title={<div className=\"home-menu\">\r\n            <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                  onClick={this.handleChange(true)}>访问量</span>\r\n            <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\r\n          </div>}\r\n          extra={<RangePicker\r\n            defaultValue={[moment('2019/01/01', dateFormat), moment('2019/06/01', dateFormat)]}\r\n            format={dateFormat}\r\n          />}\r\n        >\r\n          <Card\r\n            className=\"home-table-left\"\r\n            title={isVisited ? '访问趋势' : '销售趋势'}\r\n            bodyStyle={{padding: 0, height: 275}}\r\n            extra={<Icon type=\"reload\"/>}\r\n          >\r\n            <Bar/>\r\n          </Card>\r\n\r\n          <Card title='任务' extra={<Icon type=\"reload\"/>} className=\"home-table-right\">\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color=\"red\">\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Form, Input, Select } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n/*\r\n添加分类的form\r\n*/\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, //用来传递form对象的函数\r\n    categorys: PropTypes.array.isRequired, // 一级分类的数组\r\n    parentId: PropTypes.string.isRequired // 父分类的ID\r\n  }\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n  render() {\r\n    const { categorys, parentId } = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('parentId', {\r\n              initialValue: parentId\r\n            })(\r\n              <Select>\r\n                <Option value='0'>一级分类</Option>\r\n                {\r\n                  categorys.map(c => (\r\n                    <Option value={c._id} key={c._id}>{c.name}</Option>\r\n                  ))\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: '',\r\n              rules:[\r\n                {required:true,message:'分类名必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称' />\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\nconst WrapAddForm = Form.create()(AddForm)\r\nexport default WrapAddForm\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Form, Input } from 'antd'\r\nconst Item = Form.Item\r\n/*\r\n更新分类的form\r\n*/\r\nclass UpdateForm extends Component {\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentWillMount() {\r\n    // 将form对象通过setForm方法传递给父组件\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const { categoryName } = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: categoryName, //初始值\r\n              rules: [\r\n                { required: true ,message:'分类名必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称' />\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\nconst WrapAddForm = Form.create()(UpdateForm)\r\nexport default WrapAddForm\r\n","/*\r\n包含一些常量值的模块\r\n*/\r\nexport const PAGE_SIZE = 5//每页显示的条数\r\n\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' ","import React, { Component } from 'react'\r\nimport { Card, Icon, Button, Table, message, Modal } from 'antd'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqCategorys, reqUpdateCategory, reqAddCategory } from '../../api'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\n\r\n\r\n/*\r\n商品分类路由\r\n*/\r\n\r\nexport default class Category extends Component {\r\n  state = {\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 二级分类列表\r\n    loading: false, // 是否正在获取数据中\r\n    parentId: '0', // 当前需要显示的分类列表的父分类parentId\r\n    parentName: '', // 当前需要显示的分类列表的父分类名称\r\n    showStatus: 0 // 标识添加/更新的确认框是否显示,0：都不显示，1：显示添加，2:显示更新\r\n  }\r\n\r\n  /*\r\n  初始化Table所有列的数组\r\n  */\r\n  initcolumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '分类名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '操作',\r\n        width: 300,\r\n        render: (category) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\r\n            {/* 如何向事件回调函数传递参数:先定义一个匿名函数，在匿名函数中调用处理函数并传入数据(参数) */}\r\n            {this.state.parentId === '0' ? (<LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton>) : null}\r\n          </span>\r\n        )\r\n      }\r\n    ]\r\n  }\r\n\r\n  //异步获取一级/二级分类列表显示  \r\n  // parentId：如果没有指定就用状态(this.state)中的parentId,如果参数中传入了，就用参数中传入的parentId\r\n  getCategorys = async (parentId) => {\r\n    // 在发请求前显示loading\r\n    this.setState({ loading: true })\r\n    parentId = parentId || this.state.parentId\r\n    // 发异步ajax请求获取数据\r\n    const result = await reqCategorys(parentId)\r\n    // 请求结束后,隐藏loading\r\n    this.setState({ loading: false })\r\n    if (result.status === 0) {\r\n      // 取出分类数组(可能是一级的，也可能是二级到)\r\n      const categorys = result.data\r\n      if (parentId === '0') { // 一级分类\r\n        // 更新一级分类状态\r\n        this.setState({ categorys })\r\n      } else { // 二级分类\r\n        // 更新二级分类状态\r\n        this.setState({ subCategorys: categorys })\r\n      }\r\n    } else {\r\n      message.error('获取分类列表失败')\r\n    }\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类对象的二级列表\r\n  */\r\n  showSubCategorys = (category) => {\r\n    // 更新状态\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { // 在状态更新重新render()后执行\r\n      // 发请求获取二级分类列表\r\n      this.getCategorys()\r\n      // console.log(this.state.parentId, this.state.parentName)\r\n    })\r\n    // setState之后不能立即获取最新状态，因为setState()是异步更新状态的\r\n  }\r\n\r\n  /*\r\n  显示一级分类列表\r\n  */\r\n  showCategorys = () => {\r\n    // 让parentId为0,parentName为空，subCategorys清空\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: '',\r\n      subCategorys: []\r\n    })\r\n  }\r\n\r\n  /*\r\n  响应点击取消：隐藏确定框\r\n  */\r\n  handleCancel = () => {\r\n    this.form.resetFields()\r\n    // 隐藏确认框\r\n    this.setState({ showStatus: 0 })\r\n  }\r\n\r\n  /*\r\n  显示添加的确框\r\n  */\r\n  showAdd = () => {\r\n    this.setState({ showStatus: 1 })\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  显示添加分类的确认框\r\n  */\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {// 表单前台验证\r\n      if (!err) {\r\n        // console.log('addCategory()')\r\n        // 1.隐藏确认框\r\n        this.setState({ showStatus: 0 })\r\n        // 2.收集数据,并提交添加分类的请求\r\n        /*\r\n        注意:获取两个或以上的数据，要用 getFieldsValue() 复数，而不是单数的getFieldValue(),\r\n        getFieldValue()方法只能获取一个数据 ，getFieldValue()方法取值时不能结构赋值\r\n        */\r\n        // const { parentId, categoryName } = this.form.getFieldsValue()\r\n        const { parentId, categoryName } = values // 表单验证后直接从values中就可以得到输入的数据了\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n        const result = await reqAddCategory(categoryName, parentId)\r\n        if (result.status === 0) {\r\n          // 3. 添加当前分类列表下的分类\r\n          if (parentId === this.state.parentId) {\r\n            // 重新获取当前分类列表显示\r\n            this.getCategorys()\r\n          } else if (parentId === '0') {//在二级分类列表下添加一级分类，重新获取一级分类列表，但不需要显示一级分类列表\r\n            this.getCategorys('0')\r\n          }\r\n        } else {\r\n          message.error('添加分类失败')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /*\r\n  显示修改分类的确认框\r\n  */\r\n  showUpdate = (category) => {\r\n    // 保存分类对象\r\n    this.category = category\r\n    this.setState({ showStatus: 2 })\r\n  }\r\n\r\n  /*\r\n  显示更新分类的确认框\r\n  */\r\n  updateCategory = () => {\r\n    // 进行表单验证，只有通过了才处理\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // 1.隐藏确定框\r\n        this.setState({ showStatus: 0 })\r\n        // 准备数据\r\n        const categoryId = this.category._id\r\n        const { categoryName } = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n        // 2.发请求更新分类\r\n        const result = await reqUpdateCategory({ categoryName, categoryId })\r\n        if (result.status === 0) {\r\n          // 3.重新显示新的列表\r\n          this.getCategorys()\r\n        } else {\r\n          message.error('获取更新数据失败')\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n\r\n  // 为第一次render准备数据\r\n  componentWillMount() {\r\n    this.initcolumns()\r\n  }\r\n\r\n  // 发送异步ajax请求\r\n  componentDidMount() {\r\n    this.getCategorys()\r\n  }\r\n\r\n  render() {\r\n    // 读取状态数据\r\n    const { categorys, subCategorys, parentId, parentName, loading, showStatus } = this.state\r\n    // 读取指定分类\r\n    const category = this.category || {} // 如果没有，指定一个空对象，以防报错\r\n    // card的左侧标题\r\n    const title = parentId === '0' ? '一级分类列表' : (\r\n      <span>\r\n        <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n        <Icon type=\"arrow-right\" style={{ marginRight: 5 }} />\r\n        <span>{parentName}</span>\r\n      </span>\r\n    )\r\n    const extra = (\r\n      <Button type='primary' onClick={this.showAdd}>\r\n        <Icon type='plus'></Icon>\r\n        添加\r\n      </Button>\r\n    )\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          dataSource={parentId === '0' ? categorys : subCategorys}\r\n          columns={this.columns}\r\n          bordered={true}\r\n          rowKey='_id'\r\n          pagination={{ defaultPageSize: PAGE_SIZE, showQuickJumper: true }} // 在分页器中设置每页显示5条,和跳转到几页\r\n          loading={loading}\r\n        />\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={showStatus === 1}\r\n          onOk={this.addCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm\r\n            categorys={categorys}\r\n            parentId={parentId}\r\n            setForm={form => this.form = form}\r\n          />\r\n\r\n        </Modal>\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={showStatus === 2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm categoryName={category.name} setForm={(form) => { this.form = form }} />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Select, Input, Button, Icon, Table, message } from 'antd'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqProducts, reqSearchProducts, reqUpdateStatus } from '../../api'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\n// import memoryUtils from '../../utils/memoryUtils'\r\nimport { connect } from 'react-redux'\r\nimport { addProduct } from '../../redux/actions'\r\n\r\nconst { Option } = Select\r\n\r\nclass ProductHome extends Component {\r\n  state = {// 商品的数组\r\n    total: 0,\r\n    products: [],\r\n    loading: false, // 是否正在加载中\r\n    searchName: '', // 搜索关键字\r\n    searchType: 'productName' // 根据哪个字段进行搜索，默认根据名称搜索\r\n  }\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => '￥' + price // 指定了对应的属性,传入了对应的属性值\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '状态',\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const { status, _id } = product\r\n          const newStatus = status === 1 ? 2 : 1\r\n          return (\r\n            <span>\r\n              <Button\r\n                type='primary'\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status === 1 ? '下架' : '上架'}\r\n              </Button>\r\n              <span>{status === 1 ? '在售' : '已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '操作',\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              <LinkButton onClick={() => this.showDetail(product)}>详情</LinkButton>\r\n              <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ]\r\n  }\r\n\r\n\r\n  /*\r\n  显示商品详情界面\r\n  */\r\n  showDetail = (product) => {\r\n    // 缓存product对象给detail组件使用\r\n    // memoryUtils.product = product\r\n    this.props.addProduct(product) // 分发action，把product写入store中\r\n    this.props.history.push('/product/detail') // 跳转到商品详情页\r\n  }\r\n\r\n\r\n  /*\r\n  显示修改商品界面\r\n  */\r\n  showUpdate = (product) => {\r\n    // memoryUtils.product = product // 把product对象存入memoryUtils模块\r\n    this.props.addProduct(product) // 把product对象存入redux\r\n    this.props.history.push('/product/addupdate') //跳转到商品修改页\r\n  }\r\n\r\n  // 获取指定页码的列表数据显示\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum //保存pageNum,让其他方法可以看到页码\r\n    this.setState({ loading: true })//显示loading\r\n    const { searchName, searchType } = this.state\r\n    let result\r\n    if (searchName) {\r\n      result = await reqSearchProducts({ pageNum, pageSize: PAGE_SIZE, searchName, searchType })\r\n    } else {\r\n      result = await reqProducts(pageNum, PAGE_SIZE)\r\n    }\r\n    this.setState({ loading: false })//隐藏loading\r\n    if (result.status === 0) {//请求成功\r\n      // 获取数据\r\n      const { total, list } = result.data\r\n      // 改变状态\r\n      this.setState({ total, products: list })\r\n    } else {\r\n      message.error('获取商品信息失败')\r\n    }\r\n  }\r\n\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status)\r\n    if (result.status === 0) {\r\n      message.success('更新商品成功')\r\n      this.getProducts(this.pageNum)\r\n    } else {\r\n      message.error('更新商品失败')\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumns()\r\n  }\r\n  componentDidMount() {\r\n    this.getProducts(1)\r\n  }\r\n\r\n  render() {\r\n    const { products, total, loading, searchName, searchType } = this.state\r\n    const title = (\r\n      <span>\r\n        <Select value={searchType} style={{ width: 150 }} onChange={value => this.setState({ searchType: value })}>{/*受控组件*/}\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input placeholder='关键字' value={searchName} style={{ width: 150, margin: '0 15px' }} onChange={event => this.setState({ searchName: event.target.value })}></Input>{/*受控组件*/}\r\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n      </span>\r\n    )\r\n    const extra = (\r\n      <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\r\n        <Icon type='plus'></Icon>\r\n        添加商品\r\n      </Button>\r\n    )\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          rowKey='_id'\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          bordered\r\n          loading={loading}\r\n          pagination={\r\n            {\r\n              current: this.pageNum,\r\n              total,//总数\r\n              defaultPageSize: PAGE_SIZE,//一页显示多少条信息的常量\r\n              showQuickJumper: true,//根据输入页码跳转到第几页\r\n              onChange: this.getProducts//分页时发请求去加载分页内容\r\n            }\r\n          }\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({ product: state.product }),\r\n  { addProduct }\r\n)(ProductHome)","import React, { Component } from 'react'\r\n\r\nimport { Upload, Icon, Modal, message } from 'antd';\r\nimport { reqDeleteImg } from '../../api'\r\nimport PropTypes from 'prop-types'\r\nimport { BASE_IMG_URL } from '../../utils/constants'\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class PicturesWall extends Component {\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n  state = {\r\n    previewVisible: false, // 标识是否显示大图预览Modal\r\n    previewImage: '', // 大图的url\r\n    fileList: [\r\n      // {\r\n      //   uid: '-1',// 文件唯一标识，建议设置为负数，防止和内部产生的 id 冲突\r\n      //   name: 'image.png',// 文件名\r\n      //   status: 'done',// 图片的状态，状态有：uploading done error removed\r\n      //   url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', //图片的地址\r\n      // },\r\n    ]\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    let fileList = []\r\n    // 如果传入了imgs属性\r\n    const { imgs } = props\r\n    if (imgs && imgs.length > 0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index,// 文件唯一标识，建议设置为负数，防止和内部产生的 id 冲突\r\n        name: img,// 文件名\r\n        status: 'done',// 图片的状态，状态有：uploading done error removed\r\n        url: BASE_IMG_URL + img, //图片的地址\r\n      }))\r\n    }\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览Modal\r\n      previewImage: '', // 大图的url\r\n      fileList //所有已上传图片的数组\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n  获取所有已上传图片文件名的数组\r\n  */\r\n  getImgs = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n\r\n  // 隐藏Modal\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    // 指定file对应的大图\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  handleChange参数是个对象：{\r\n    file: 当前操作的图片文件(上传/删除)\r\n    fileList: 所有已上传图片的数组\r\n    event: \r\n  }\r\n  */\r\n  handleChange = async ({ file, fileList }) => {\r\n\r\n    // 一但上传成功，将当前上传的file的信息修正(name,url)\r\n    if (file.status === 'done') { // 上传图片完成\r\n      // console.log(file)\r\n      const result = file.response\r\n      if (result.status === 0) {\r\n        message.success('图片上传成功!')\r\n        const { name, url } = result.data\r\n        file = fileList[fileList.length - 1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('图片上传失败!')\r\n      }\r\n    } else if (file.status === 'removed') { // 删除图片\r\n      const result = await reqDeleteImg(file.name)\r\n      if (result.status === 0) {\r\n        message.success('删除图片成功!')\r\n      } else {\r\n        message.error('删除图片失败!')\r\n      }\r\n    }\r\n\r\n    //操作的过程中及时去更新fileList的状态\r\n    this.setState({ fileList })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\" // 图片上传的接口地址\r\n          accept='image/*' // 只接受图片格式\r\n          listType=\"picture-card\" // 卡片样式的图片\r\n          name='image' // 请求参数名\r\n          fileList={fileList} // 已经上传的文件列表(数组)\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 3 ? null : uploadButton}{/*限制图片上传的数量*/}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\n\r\nexport default class RichTextEditor extends Component {\r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const html = props.detail;\r\n    if (html) { // 如果有值，根据html格式字符串创建一个对应的编辑对象\r\n      const contentBlock = htmlToDraft(html);\r\n      if (contentBlock) {\r\n        const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n        const editorState = EditorState.createWithContent(contentState);\r\n        this.state = {\r\n          editorState,\r\n        };\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty(), // 创建一个空的编辑对象\r\n      };\r\n    }\r\n  }\r\n\r\n  /*\r\n  输入过程中实时的回调\r\n  */\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  getDetail = () => {\r\n    const { editorState } = this.state\r\n    // 返回html格式的文本\r\n    return draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise( \r\n      (resolve, reject) => {// 原生ajax\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', '/manage/img/upload');\r\n        const data = new FormData();\r\n        data.append('image', file);\r\n        xhr.send(data);\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText);\r\n          const url = response.data.url // 得到图片的url\r\n          resolve({data: {link: url}})\r\n        });\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText);\r\n          reject(error);\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{ border: '1px solid #000', minHeight: 200, paddingLeft: 10 }}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Card, Form, Input, Icon, Cascader, Button, message } from 'antd'\r\nimport LinkButton from '../../components/link-button'\r\nimport { reqCategorys, reqAddOrUpdateProduct } from '../../api'\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\n// import memoryUtils from '../../utils/memoryUtils'\r\nimport { connect } from 'react-redux'\r\nimport { addProduct } from '../../redux/actions'\r\n\r\nconst { Item } = Form\r\nconst { TextArea } = Input\r\n\r\nclass ProductAppUpdate extends Component {\r\n  state = {\r\n    options: [],\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    // 创建用来保存ref标识的标签对象的容器\r\n    this.pw = React.createRef();\r\n    this.editor = React.createRef();\r\n  }\r\n\r\n  initOption = async (categorys) => {\r\n    // 根据categorys生成options\r\n    const options = categorys.map(c => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false, // 不是叶子\r\n    }))\r\n    // 如果是个二级分类商品更新\r\n    const { isUpdate, product } = this\r\n    const { pCategoryId } = product\r\n    if (isUpdate && pCategoryId !== '0') {\r\n      // 获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }))\r\n\r\n      // 找到当前商品对应的一级option对象\r\n      const targetOption = options.find(option => option.value === pCategoryId)\r\n      // 关联到对应的一级option上\r\n      targetOption.children = childOptions\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({ options })\r\n  }\r\n\r\n  /*\r\n  异步获取一级或二级分类列表并显示\r\n  */\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId)\r\n    if (result.status === 0) {\r\n      const categorys = result.data\r\n      if (parentId === '0') {// 如果是一级分类列表\r\n        this.initOption(categorys)\r\n      } else { // 二级列表\r\n        return categorys // 返回二级列表 ==> 当千async函数返回的promise就会成功且value为categorys\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  submit = () => {\r\n    // 进行表单验证，如果通过了，才发送请求\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {//验证通过\r\n\r\n        // 1.收集数据,并封装成product对象\r\n        const { name, desc, price, categoryIds } = values\r\n        let pCategoryId, categoryId\r\n        if (categoryIds.length === 1) {\r\n          pCategoryId = '0'\r\n          categoryId = categoryIds[0]\r\n        } else {\r\n          pCategoryId = categoryIds[0]\r\n          categoryId = categoryIds[1]\r\n        }\r\n        const imgs = this.pw.current.getImgs() // 得到图片数组数据\r\n        const detail = this.editor.current.getDetail() // 得到富文本编辑器的输入信息\r\n\r\n        const product = { name, desc, price, imgs, detail, pCategoryId, categoryId }\r\n\r\n        // 如果是更新，需要添加 _id \r\n        if (this.isUpdate) {\r\n          product._id = this.product._id\r\n        }\r\n\r\n        // 2.调用接口请求函数去添加或者更新\r\n        const result = await reqAddOrUpdateProduct(product)\r\n\r\n        // 3.根据结果提示\r\n        if (result.status === 0) {\r\n          message.success(`${this.isUpdate ? '更新商品成功' : '添加商品成功'}`)\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error(`${this.isUpdate ? '更新商品失败' : '添加商品失败'}`)\r\n        }\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  验证价格的函数\r\n  */\r\n  validatePrice = (rule, value, callback) => {\r\n    if (value * 1 > 0) {\r\n      callback()\r\n    } else {\r\n      callback('价格必须大于0')\r\n    }\r\n  }\r\n\r\n  /*loadData方法加载下一级列表的数据 */\r\n  loadData = async selectedOptions => {\r\n    // 得到选择的option对象\r\n    const targetOption = selectedOptions[0];\r\n\r\n    // 请求数据成功前显示loading的效果\r\n    targetOption.loading = true;\r\n\r\n    // 根据选择的分类，请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    // 请求数据成功后隐藏loading的效果\r\n    targetOption.loading = false;\r\n    // 二级分类列表有数据\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      // 生成二级列表options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true, // 不是叶子\r\n      }))\r\n      // 关联到当前option上\r\n      targetOption.children = childOptions\r\n    } else { //当前选择的分类没有二级分类\r\n      targetOption.isLeaf = true // 是叶子\r\n    }\r\n    this.setState({\r\n      options: [...this.state.options]\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n    // 取出携带的state\r\n    const { product } = this.props // 如果是添加没值，否则有值\r\n    // 保存是否是更新的标识\r\n    this.isUpdate = !!product._id\r\n    // 保存商品(如果没有，保存的是空对象，防止报错)\r\n    this.product = product || {}\r\n    // console.log(this.product)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategorys('0')\r\n  }\r\n\r\n\r\n  /*\r\n  在组件卸载之前清除保存的数据,以防点击添加商品时会有数据\r\n  */\r\n  componentWillUnmount() {\r\n    // 组件卸载时，分发action，把product清空\r\n    this.props.addProduct({})\r\n  }\r\n\r\n  render() {\r\n    const { isUpdate, product } = this\r\n    const { categoryId, pCategoryId, imgs, detail } = product\r\n    // 用来接收级联分类Id的数组\r\n    const categoryIds = []\r\n    if (isUpdate) {\r\n\r\n      if (pCategoryId === '0') {// 商品是一级分类的商品\r\n        categoryIds.push(categoryId)\r\n      } else {// 商品是一级分类的商品\r\n        categoryIds.push(pCategoryId)\r\n        categoryIds.push(categoryId)\r\n      }\r\n    }\r\n    const formItemLayout = {// 指定Item布局的配置对象\r\n      labelCol: { span: 2 }, // 左侧label的宽度\r\n      wrapperCol: { span: 8 },//右侧包裹的宽度\r\n    };\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.push('/product')}>\r\n          <Icon\r\n            type='arrow-left'\r\n            style={{ fontSize: 20 }}\r\n          />\r\n        </LinkButton>\r\n        <span>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n      </span>\r\n    )\r\n\r\n    const { getFieldDecorator } = this.props.form\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label='商品名称'>\r\n            {getFieldDecorator('name', {\r\n              initialValue: product.name,\r\n              rules: [\r\n                { required: true, message: '必须输入商品名称' }\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入商品名称' ></Input>\r\n            )}\r\n          </Item>\r\n          <Item label='商品描述'>\r\n            {getFieldDecorator('desc', {\r\n              initialValue: product.desc,\r\n              rules: [\r\n                { required: true, message: '必须输入商品描述' }\r\n              ]\r\n            })(\r\n              <TextArea placeholder='请输入商品描述' autosize={{ minRows: 2 }}></TextArea>\r\n            )}\r\n          </Item>\r\n          <Item label='商品价格'>\r\n            {\r\n              getFieldDecorator('price', {\r\n                initialValue: product.price,\r\n                rules: [\r\n                  { required: true, message: '必须输入商品价格' },\r\n                  { validator: this.validatePrice }//\t自定义校验\r\n                ]\r\n              })(\r\n                <Input type='number' placeholder='请输入商品价格' addonAfter='元' />\r\n              )\r\n            }\r\n          </Item>\r\n          <Item label='商品分类'>\r\n            {getFieldDecorator('categoryIds', {\r\n              initialValue: categoryIds,\r\n              rules: [\r\n                { required: true, message: '必须指定商品分类' },\r\n              ]\r\n            })(\r\n              <Cascader\r\n                placeholder='请指定商品分类'\r\n                options={this.state.options} /*需要显示的列表数据*/\r\n                loadData={this.loadData} /*当选择某个列表项，加载下一级列表的监听回调 */\r\n              />\r\n            )}\r\n          </Item>\r\n          <Item label='商品图片'>\r\n            <PicturesWall ref={this.pw} imgs={imgs} />\r\n          </Item>\r\n          <Item label='商品详情' labelCol={{ span: 2 }} wrapperCol={{ span: 20 }}>\r\n            <RichTextEditor ref={this.editor} detail={detail} />\r\n          </Item>\r\n          <Item>\r\n            <Button type='primary' onClick={this.submit}>提交</Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({ product: state.product }),\r\n  { addProduct }\r\n)(Form.create()(ProductAppUpdate))\r\n\r\n","import React, { Component } from 'react'\r\nimport { Card, Icon, List, } from 'antd'\r\nimport LinkButton from '../../components/link-button'\r\nimport { BASE_IMG_URL } from '../../utils/constants'\r\nimport { reqCategory } from '../../api'\r\n// import memoryUtils from '../../utils/memoryUtils'\r\nimport {connect} from 'react-redux'\r\nimport {addProduct} from '../../redux/actions'\r\n\r\nconst { Item } = List\r\n\r\nclass ProductDetail extends Component {\r\n  state = {\r\n    cName1: '',// 一级分类名称\r\n    cName2: '' // 二级分类名称\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { pCategoryId, categoryId } = this.props.product //this.props.location.state.product\r\n    if (pCategoryId === 0) {// 一级分类下的商品\r\n      const result = await reqCategory(categoryId)\r\n      if (result.status === 0) {\r\n        const cName1 = result.data.name\r\n        this.setState({ cName1 })\r\n      }\r\n    } else {// 二级分类下的商品\r\n      /*通过多个await方式发多个请求：后面的请求是在前一个请求成功后才开始发送\r\n      // const result1 = await reqCategory(pCategoryId)//获取一级分类列表\r\n      // const result2 = await reqCategory(categoryId)// 获取二级分类列表\r\n      // const cName1 = result1.data.name\r\n      // const cName2 = result2.data.name\r\n      */\r\n\r\n      // 一次性发送多个请求，只有都成功了，才正常处理\r\n      const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n      const cName1 = results[0].data.name\r\n      const cName2 = results[1].data.name\r\n      this.setState({ cName1, cName2 })\r\n    }\r\n  }\r\n\r\n  /*\r\n  在组件卸载之前清除保存的数据,以防点击添加商品时会有数据\r\n  */\r\n  componentWillUnmount() {\r\n    // 组件卸载时，分发action，把product清空\r\n    this.props.addProduct({})\r\n  }\r\n\r\n  render() {\r\n    // 读取携带过来的state数据\r\n    const { name, desc, price, detail, imgs } = this.props.product\r\n    const { cName1, cName2 } = this.state\r\n    const title = (\r\n      <span>\r\n        <LinkButton >\r\n          <Icon\r\n            type='arrow-left'\r\n            style={{ marginRight: 15, fontSize: 20 }}\r\n            onClick={() => this.props.history.push('/product')}\r\n          />\r\n        </LinkButton>\r\n        <span>商品详情</span>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title} className='product-detail'>\r\n        <List>\r\n          <Item>\r\n            <span className='left'>商品名称:</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>商品描述:</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>价格:</span>\r\n            <span>{price}元</span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>所属分类:</span>\r\n            <span>{cName1}{cName2 ? '-->' + cName2 : ''}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>商品图片:</span>\r\n            <span>\r\n              {imgs.map(img => (\r\n                <img src={BASE_IMG_URL + img} key={img} alt=\"img\" className='product-img' />\r\n              ))}\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className='left'>商品详情:</span>\r\n            <span dangerouslySetInnerHTML={{ __html: detail }}></span>\r\n          </Item>\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state=>({product:state.product}),\r\n  {addProduct}\r\n)(ProductDetail)","import React, { Component } from 'react'\r\nimport { Route, Switch,Redirect } from 'react-router-dom'\r\nimport ProductHome from './home'\r\nimport ProductAppUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\n\r\nimport './product.less'\r\n\r\n/*\r\n产品路由 \r\n */\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path='/product' component={ProductHome} exact={true}></Route>{/*exact路径完全匹配*/}\r\n        <Route path='/product/addupdate' component={ProductAppUpdate}></Route>\r\n        <Route path='/product/detail' component={ProductDetail}></Route>\r\n        <Redirect to='/product' />\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nconst Item = Form.Item\r\n\r\n/*\r\n添加分类的form\r\n*/\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, //用来传递form对象的函数\r\n  }\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    const formItemLayout = {// 指定Item布局的配置对象\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 },//右侧包裹的宽度\r\n    };\r\n    return (\r\n      <Form>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('roleName', {\r\n              initialValue: '',\r\n              rules:[\r\n                {required:true,message:'角色名必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入角色名' />\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\nconst WrapAddForm = Form.create()(AddForm)\r\nexport default WrapAddForm\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Tree } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport menuList from '../../config/menuConfig'\r\nconst Item = Form.Item\r\nconst { TreeNode } = Tree\r\n\r\n/*\r\n添加分类的form\r\n*/\r\nexport default class AuthForm extends Component {\r\n\r\n  static propTypes = {\r\n    role: PropTypes.object\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    // 根据传入角色的menus生成初始状态\r\n    const { menus } = props.role\r\n    this.state = {\r\n      checkedKeys: menus\r\n    }\r\n  }\r\n\r\n\r\n  // 为父组件提供获取最新menus的方法\r\n  getMenus = () => this.state.checkedKeys\r\n\r\n  getTreeNodes = (menuList) => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      )\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  onCheck = checkedKeys => {\r\n    console.log('onCheck', checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.treeNodes = this.getTreeNodes(menuList)\r\n  }\r\n\r\n  // 根据新传入的role来更新checkedKeys状态\r\n  // 该生命周期函数是在组件接收到新的属性时自动调用\r\n  componentWillReceiveProps(nextProps) {\r\n    const menus = nextProps.role.menus\r\n    this.setState({ checkedKeys: menus })\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = {// 指定Item布局的配置对象\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 },//右侧包裹的宽度\r\n    }\r\n    const { role } = this.props\r\n    const { checkedKeys } = this.state\r\n    return (\r\n      <div>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          <Input value={role.name} disabled />\r\n        </Item>\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n        >\r\n          <TreeNode title='平台权限管理' key='all'>\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\nimport { reqRoles, reqAddRole, reqUpdateRole } from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport formateDate from '../../utils/formateDate'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../redux/actions'\r\n\r\n/**\r\n角色管理路由\r\n */\r\nclass Role extends Component {\r\n  state = {\r\n    roles: [], // 所有角色列表\r\n    role: {}, // 选中的role\r\n    isShowAdd: false, // 是否显示添加界面\r\n    isShowAuth: false // 是否显示设置权限界面\r\n  }\r\n  constructor(props) {\r\n    super(props)\r\n    this.auth = React.createRef()\r\n  }\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: create_time => formateDate(create_time)\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: formateDate // 可以直接写个函数名，让render直接带值去调用这个函数，得到的就是formateDate的返回值\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name',\r\n      },\r\n    ]\r\n  }\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: event => {\r\n        // console.log(role)\r\n        this.setState({ role })\r\n      }\r\n    }\r\n  }\r\n\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status === 0) {\r\n      const roles = result.data\r\n      this.setState({ roles })\r\n    } else {\r\n      message.error('请求失败')\r\n    }\r\n  }\r\n\r\n\r\n  // 添加角色\r\n  addRole = () => {\r\n    // 先进行表单验证\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {// 验证通过\r\n        this.setState({ isShowAdd: false })//隐藏确认框\r\n        // 收集输入数据\r\n        const { roleName } = values\r\n        this.form.resetFields()// 清空输入框\r\n        // 请求添加\r\n        const result = await reqAddRole(roleName)\r\n        if (result.status === 0) {\r\n          message.success('添加角色成功')\r\n          // this.getRoles()\r\n          // 产生新的角色\r\n          const role = result.data\r\n          // 更新roles状态\r\n\r\n          /*不推荐直接修改state里面的数据 */\r\n          // const roles = this.state.roles\r\n          // roles.push(role)\r\n          // this.setState({ roles })\r\n\r\n          /*\r\n          推荐写法: 基于原本状态数据更新\r\n          */\r\n          this.setState(state => ({//函数写法(原始用法),参数里面除了可以传state，还能传props\r\n            roles: [...state.roles, role]\r\n          }))\r\n        } else {\r\n          message.error('添加角色失败')\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  // 更新角色\r\n  updateRole = async () => {\r\n    this.setState({ isShowAuth: false })//隐藏确认框\r\n    const role = this.state.role\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = this.props.user.username// 设置授权人\r\n    // 请求更新\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status === 0) {\r\n      // 如果当前更新的是自己角色的权限，强制退出\r\n      if (role._id === this.props.user.role_id) {\r\n        // 分发action退出登录\r\n        this.props.logout()\r\n        message.success('当前用户角色权限已修改，请重新登录')\r\n      } else {\r\n        message.success('设置角色权限成功')\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        })\r\n      }\r\n    } else {\r\n      message.error('设置角色权限失败')\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoles()\r\n  }\r\n\r\n  render() {\r\n    const { roles, role, isShowAdd, isShowAuth } = this.state\r\n    const title = (\r\n      <span>\r\n        <Button type='primary' onClick={() => { this.setState({ isShowAdd: true }) }}>创建角色</Button> &nbsp;&nbsp;\r\n        <Button type='primary' disabled={!role._id} onClick={() => { this.setState({ isShowAuth: true }) }}>设置角色权限</Button>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: PAGE_SIZE, showQuickJumper: true }}\r\n          rowSelection={{ \r\n            type: 'radio', \r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role)=>{ // 选择某个radio时的回调\r\n              this.setState({ role })\r\n            } \r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => { this.form.resetFields(); this.setState({ isShowAdd: false }) }}\r\n        >\r\n          <AddForm\r\n            setForm={form => this.form = form}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色的权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => { this.setState({ isShowAuth: false }) }}\r\n        >\r\n          <AuthForm role={role} ref={this.auth} />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state=>({user:state.user}),\r\n  {logout}\r\n)(Role)\r\n","import React, { PureComponent } from 'react'\r\nimport { Form, Input, Select } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加/修改用户的form\r\n*/\r\nclass UserForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, //用来传递form对象的函数\r\n    roles: PropTypes.array.isRequired,\r\n    user: PropTypes.object\r\n  }\r\n\r\n  // 密码的自定义校验函数\r\n  validatorPwd = (rule, value, callback) => {\r\n    if (!value) {\r\n      callback('密码必须输入')\r\n    } else if (value.length < 4) {\r\n      callback('密码长度不能小于四位')\r\n    } else if (value.length > 12) {\r\n      callback('密码长度不能大于十二位')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback('密码必须由英文，数字或下划线组成')\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    const formItemLayout = {// 指定Item布局的配置对象\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 },//右侧包裹的宽度\r\n    };\r\n    const { roles, user } = this.props\r\n    // console.log(user)\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label='用户名'>\r\n          {\r\n            getFieldDecorator('username', {\r\n              initialValue: user.username,\r\n              rules: [\r\n                { required: true, whitespace: true, message: '用户名必须输入' },\r\n                { min: 4, message: '用户名不能小于四位' },\r\n                { max: 12, message: '用户名不能大于十二位' },\r\n                { pattern: /^[a-zA-Z][a-zA-Z0-9_]*$/, message: '用户名必须是英文开头，由英文，数字或下划线组成' }\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入用户名' />\r\n            )\r\n          }\r\n        </Item>\r\n        {user._id ? null : (<Item label='密　码'>\r\n          {\r\n            getFieldDecorator('password', {\r\n              initialValue: '',\r\n              rules: [{ required: true }, { validator: this.validatorPwd }],\r\n            })(\r\n              <Input placeholder='请输入密码' type='password' />\r\n            )\r\n          }\r\n        </Item>)}\r\n        <Item label='手机号'>\r\n          {\r\n            getFieldDecorator('phone', {\r\n              initialValue: user.phone,\r\n              rules: [\r\n                { required: true, message: '电话号码必须输入' },\r\n                { pattern: /^1[3456789]\\d{9}$/, message: '请输入正确的手机号' }\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入手机号' type='tel' />\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label='邮　箱'>\r\n          {\r\n            getFieldDecorator('email', {\r\n              initialValue: user.email,\r\n              rules: [\r\n                { required: true, message: '邮箱必须输入' },\r\n                { pattern: /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/, message: '请输入正确的邮箱' }\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入邮箱' />\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label='角　色'>\r\n          {\r\n            getFieldDecorator('role_id', {\r\n              initialValue: user.role_id,\r\n            })(\r\n              <Select>\r\n                {\r\n                  roles.map(role => (\r\n                    <Option value={role._id} key={role._id}>{role.name}</Option>\r\n                  ))\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\nconst WrapAddForm = Form.create()(UserForm)\r\nexport default WrapAddForm\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport LinkButton from '../../components/link-button'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\nimport formateDate from '../../utils/formateDate'\r\nimport { reqUsers, reqDeleteUser, reqAddOrUpdateUser } from '../../api'\r\nimport UserForm from './user-form'\r\n\r\nconst { confirm } = Modal\r\n\r\n/**\r\n用户管理路由\r\n*/\r\nexport default class User extends Component {\r\n  state = {\r\n    users: [], // 所有用户列表\r\n    roles: [], // 所有角色的列表\r\n    isShow: false // 是否显示确认框\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email'\r\n      },\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone'\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        // render: (role_id)=>this.state.roles.find(role=>role._id===role_id).name // 每次都要去遍历寻找，影响效率\r\n        render: (role_id) => this.roleNames[role_id] // \r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (user) => ( // user:传入点击对应的user\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n        )\r\n      },\r\n    ]\r\n  }\r\n\r\n  /*\r\n  添加或更新用户\r\n  */\r\n  addOrUpdateUser = async () => {\r\n    // 点击确定隐藏表单\r\n    this.setState({ isShow: false })\r\n    // 1. 收集表单数据\r\n    const user = this.form.getFieldsValue()\r\n    // 收集完成重置输入框\r\n    this.form.resetFields()\r\n\r\n    // 如果是更新，需要给user指定_id属性\r\n    if (this.user && this.user._id) {\r\n      // 给user指定_id属性\r\n      user._id = this.user._id\r\n    }\r\n\r\n    // 2. 提交请求  \r\n    const result = await reqAddOrUpdateUser(user)\r\n    // 3. 重新渲染列表\r\n    if (result.status === 0) {\r\n      message.success(`${this.user ? '修改' : '创建'}用户成功`)\r\n      this.getUsers()\r\n    }\r\n  }\r\n\r\n  /*\r\n  根据role的数组，生成包含所有角色名的对象(属性名用角色的id值)\r\n  */\r\n  initRoleNames = (roles) => { //initRoleNames(roles)方法用一个对象roleNames去把统计role._id对应的角色名name保存起来，其中key是role._id的值，value是角色名，最后把这个对象roleNames保存到this中\r\n    const roleNames = roles.reduce((pre, role) => { // roles数组=>roleNames对象\r\n      pre[role._id] = role.name\r\n      return pre\r\n    }, {})\r\n    // 保存roleNames到this中去\r\n    this.roleNames = roleNames\r\n  }\r\n\r\n  getUsers = async () => {\r\n    const result = await reqUsers()\r\n    if (result.status === 0) {\r\n      // message.success('获取用户列表成功!')\r\n      const { users, roles } = result.data\r\n      this.initRoleNames(roles) // 在发请求获取user和roles的时候，调用initRoleNames(roles)方法，一次性获取所有的role._id对应的角色名name\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    } else {\r\n      message.error('获取用户列表失败!')\r\n    }\r\n  }\r\n\r\n  // 删除用户\r\n  deleteUser = (user) => {\r\n    confirm({\r\n      title: `确定删除${user.username}吗?`,\r\n      okText: '确定',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id)\r\n        if (result.status === 0) {\r\n          message.success('删除成功!')\r\n          this.getUsers() //简单做getUsers()就能更新删除后的列表\r\n        } else {\r\n          message.error('删除失败!')\r\n        }\r\n      },\r\n      // onCancel() {\r\n      //   console.log('Cancel');\r\n      // },\r\n    });\r\n  }\r\n\r\n  /*\r\n  显示添加界面\r\n  */\r\n  showAdd = () =>{\r\n    // 先把this.user清空，取除前面保存的this.user\r\n    this.user = null\r\n    // 显示添加界面\r\n    this.setState({ isShow: true })\r\n  }\r\n\r\n  /*\r\n  显示修改界面\r\n  */\r\n  showUpdate = (user) => {\r\n    this.user = user\r\n    this.setState({ isShow: true })\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsers()\r\n  }\r\n\r\n  handleCancel = () =>{\r\n    this.setState({ isShow: false })\r\n    // 重置输入框\r\n    this.form.resetFields()\r\n  }\r\n\r\n  render() {\r\n    const { users, isShow, roles } = this.state\r\n    const user = this.user || {}\r\n    const title = (\r\n      <Button type='primary' onClick={this.showAdd}>创建用户</Button>\r\n    )\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          bordered={true}\r\n          rowKey='_id'\r\n          pagination={{ defaultPageSize: PAGE_SIZE, showQuickJumper: true }} // 在分页器中设置每页显示5条,和跳转到几页\r\n        />\r\n        <Modal\r\n          title={user._id ? '修改用户' : '添加用户'}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UserForm setForm={form => this.form = form} roles={roles} user={user} />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { Card, Button } from 'antd'\r\n\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/**\r\n柱状图路由\r\n */\r\nexport default class Bar extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量数组\r\n    stores: [12, 14, 27, 16, 17, 40] // 库存数组\r\n  }\r\n\r\n  /*\r\n  getOption函数返回柱状图的配置对象\r\n  */\r\n  getOption = (sales, store) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data: sales\r\n      },\r\n      {\r\n        name: '库存',\r\n        type: 'bar',\r\n        data: store\r\n      }]\r\n    }\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(\r\n      state => ({\r\n        sales: state.sales.map(sale => {\r\n          return sale + 1\r\n        }),\r\n        stores: state.stores.reduce((pre, store) => {\r\n          pre.push(store - 1)\r\n          return pre\r\n        }, [])\r\n      })\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { sales, stores } = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { Card, Button } from 'antd'\r\n\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/**\r\n折线图路由\r\n */\r\nexport default class Line extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量数组\r\n    stores: [12, 14, 27, 16, 17, 40] // 库存数组\r\n  }\r\n\r\n  /*\r\n  getOption函数返回柱状图的配置对象\r\n  */\r\n  getOption = (sales, store) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: sales\r\n      },\r\n      {\r\n        name: '库存',\r\n        type: 'line',\r\n        data: store\r\n      }]\r\n    }\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(\r\n      state => ({\r\n        sales: state.sales.map(sale => {\r\n          return sale + 1\r\n        }),\r\n        stores: state.stores.map(store => {\r\n          return store - 1\r\n        }),\r\n      })\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { sales, stores } = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card } from 'antd'\r\n\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/**\r\n  饼状图路由\r\n */\r\nexport default class Pie extends Component {\r\n\r\n  getOption1() {\r\n    return {\r\n      title: {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '60%'],\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 310, name: '邮件营销' },\r\n            { value: 234, name: '联盟广告' },\r\n            { value: 135, name: '视频广告' },\r\n            { value: 1548, name: '搜索引擎' }\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  getOption2() {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '50%'],\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 310, name: '邮件营销' },\r\n            { value: 274, name: '联盟广告' },\r\n            { value: 235, name: '视频广告' },\r\n            { value: 400, name: '搜索引擎' }\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption1()} style={{height:300}}/>\r\n        </Card>\r\n\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{height:300}}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Row, Col } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { setHeadTitle } from '../../redux/actions'\r\nimport './not-found.less'\r\n/*前台 404 页面 */\r\nclass NotFound extends Component {\r\n  goHome = () => {\r\n    this.props.setHeadTitle('首页')\r\n    this.props.history.replace('/home')\r\n  }\r\n  render() {\r\n    return (\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1> <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={this.goHome}> 回到首页 </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>)\r\n  }\r\n} export default connect(null, { setHeadTitle })(NotFound)","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { Layout } from 'antd';\r\nimport LeftNav from '../../components/left-nav/left-nav'\r\nimport Header from '../../components/header/header'\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nimport NotFound from '../not-found/not-found'\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\n\r\n/*\r\n管理后台的路由组件\r\n*/\r\nclass Admin extends Component {\r\n\r\n  render() {\r\n    const user = this.props.user\r\n\r\n    // console.log(user)\r\n    // 如果内存没有储存user ==> 当前没有登录\r\n    if (!user || !user._id) {\r\n      // 自动跳转到登录(在render()中)\r\n      return <Redirect to='/login' />\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: '100%' }}>\r\n        <Sider>\r\n          <LeftNav />\r\n        </Sider>\r\n        <Layout>\r\n          <Header />\r\n          <Content style={{ margin: '20px', backgroundColor: '#fff', height: '100%' }}>\r\n            <Switch>\r\n              <Redirect from='/' to='/home' exact />\r\n              <Route path='/home' component={Home} />\r\n              <Route path='/category' component={Category} />\r\n              <Route path='/product' component={Product} />\r\n              <Route path='/role' component={Role} />\r\n              <Route path='/user' component={User} />\r\n              <Route path='/charts/bar' component={Bar} />\r\n              <Route path='/charts/line' component={Line} />\r\n              <Route path='/charts/pie' component={Pie} />\r\n              <Route component={NotFound}/>\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center', color: '#aaa' }}>react 后台项目</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  state => ({ user: state.user })\r\n)(Admin)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport { Form, Icon, Input, Button } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../redux/actions'\r\n// const Item = Form.Item // 不能写在import之前\r\n\r\n/* \r\n登录的路由组件\r\n*/\r\nclass Login extends Component {\r\n  handleSubmit = (event) => {\r\n    // 阻止默认提交\r\n    event.preventDefault()\r\n\r\n    // 点击时，对所有表单字段进行统一校验\r\n    this.props.form.validateFields(async (error, values) => {\r\n      //校验成功\r\n      if (!error) {\r\n        // 提交登录的ajax请求(post请求)\r\n        const { username, password } = values\r\n        // const result = await reqLogin(username, password)\r\n        // if (result.status === 0) {// 登陆成功\r\n        //   // 提示登陆成功信息\r\n        //   message.success('登陆成功',.7)\r\n\r\n        //   // 保存user\r\n        //   const user = result.data\r\n\r\n        //   memoryUtils.user = user // 保存在内存里面\r\n\r\n        //   storageUtils.saveUser(user) // 保存到localStorage中去\r\n        //   // 跳转到后台管理界面（登录后，不需要再回跳回登录界面了,所以不用push()方法来跳转路由，而是用replace方法来跳转路由）\r\n        //   this.props.history.replace('/home')\r\n        // } else { // 登录失败\r\n        //   // 提示登录失败信息\r\n        //   message.error(result.msg)\r\n        // }\r\n        // 调用分发异步action的函数 => 发登录的请求，有结果后更新状态\r\n        this.props.login(username, password)\r\n      } else {\r\n        console.error('校验失败')\r\n      }\r\n      /* \r\n      async和await\r\n      1. 作用: \r\n        1).简化promise对象的使用：不用再使用then()来指定成功/失败时的回调\r\n        2).以同步编码(没有回调函数)方式实现异步流程 \r\n      2. 哪里写await?\r\n        在返回promise的表达式左侧写await: 不想要promise，只想要promise异步执行成功的value数据\r\n      2. 哪里写async?\r\n        await所在的函数(最近的)定义的左侧写async\r\n      */\r\n    });\r\n    /*\r\n    得到form对象\r\n    const form = this.props.form\r\n    const values = form.getFieldsValue()\r\n    console.log(values)\r\n    */\r\n\r\n  }\r\n\r\n  /*\r\n  对密码进行自定义验证\r\n   */\r\n\r\n  /* \r\n 用户名/密码的合法性要求\r\n 1). 必须输入\r\n 2).必须大于等于4位\r\n 3).必须小于等于12位\r\n 4).必须是英文，数字或下划线组成\r\n  */\r\n  validatorPwd = (rule, value, callback) => {\r\n    if (!value) {\r\n      callback('密码必须输入')\r\n    } else if (value.length < 4) {\r\n      callback('密码长度不能小于四位')\r\n    } else if (value.length > 12) {\r\n      callback('密码长度不能大于十二位')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback('密码必须由英文，数字或下划线组成')\r\n    } else {\r\n      callback()\r\n    }\r\n    // callback('xxxx) // 验证失败，并指定提示的文本\r\n  }\r\n\r\n  render() {\r\n    const user = this.props.user\r\n    // 如果用户已经登录，自动跳转到管理界面\r\n    if (user && user._id) {\r\n      return <Redirect to='/home' />\r\n    }\r\n\r\n    const errorMsg = this.props.user.errorMsg\r\n\r\n    // 得到form对象(form有获取数据和表单验证的功能)\r\n    const form = this.props.form\r\n    const { getFieldDecorator } = form\r\n    return (\r\n      <div className='login'>\r\n        <header className='login-header'>\r\n          <img src={logo} alt=\"logo\" />\r\n          <h1>React项目: 后台管理系统</h1>\r\n        </header>\r\n        <section className='login-content'>\r\n          <div className={errorMsg?'error-msg show':'error-msg'}>{errorMsg}</div>\r\n          <h2>用户登录</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Form.Item>\r\n              {/* \r\n                用户名/密码的合法性要求\r\n                1). 必须输入\r\n                2).必须大于4位\r\n                3).必须小于12位\r\n                4).必须是英文，数字或下划线组成\r\n              */}\r\n              {getFieldDecorator('username', {//username作为标识\r\n                // 声明式验证\r\n                rules: [// 验证规则，和提示信息(配置对象)\r\n                  { required: true, whitespace: true, message: '用户名必须输入' },\r\n                  { min: 4, message: '用户名不能小于四位' },\r\n                  { max: 12, message: '用户名不能大于十二位' },\r\n                  { pattern: /^[a-zA-Z][a-zA-Z0-9_]*$/, message: '用户名必须是英文开头，由英文，数字或下划线组成' },\r\n                ],\r\n                // 指定初始值\r\n                initialValue: 'admin'\r\n              })(\r\n                <Input\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"用户名\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator('password', {//自定义校验\r\n                rules: [{ validator: this.validatorPwd }],\r\n              })(\r\n                <Input\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登录\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n1. 高阶函数\r\nForm.create()函数是高阶函数，它的返回值是一个函数\r\n2. 高阶组件\r\n    1).本质就是一个函数\r\n    2).接收一个组件（被包装组件），返回一个新的组件（包装组件），包装组件会向被包装组件传入特定属性\r\n    3).作用：拓展组件的功能（传属性等功能）\r\n    4).高阶组件也是高阶函数：接收一个组件函数，返回是一个新的函数\r\nForm.create()返回的那个函数就是一个高阶组件\r\nWrapLogin是一个包装以后的组件\r\nLogin是被包装的组件，是WrapLogin的子组件，WrapLogin会向Login传入form属性\r\n*/\r\n\r\n/*\r\n包装Form组件生成一个新的组件：Form(Login)\r\n新组件会想Form传递一个强大的对象属性：form\r\n*/\r\nconst WrapLogin = Form.create()(Login)\r\nexport default connect(\r\n  state => ({ user: state.user }),\r\n  { login }\r\n)(WrapLogin)\r\n\r\n/*\r\n1.前台表单认证\r\n2.收集用户输入数据\r\n*/","/*\r\n根组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport { Route, Switch,HashRouter } from 'react-router-dom'\r\nimport Admin from './pages/admin/admin'\r\nimport Login from './pages/login/login'\r\n\r\nexport default class App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}","/*\r\nreducer函数模块\r\n*/\r\n\r\nimport { combineReducers } from 'redux'\r\nimport { SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG, RESET_USER,ADD_PRODUCT } from './action-type'\r\nimport storageUtils from '../utils/storageUtils'\r\n\r\n\r\n// setHeadTitle 用来管理标题的reducer函数\r\nconst initHeadTitle = '首页'\r\nfunction headTitle(state = initHeadTitle, action) {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// user 用来管理登录用户的reducer函数\r\nconst initUser = storageUtils.getUser()\r\nfunction user(state = initUser, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USER:\r\n      return action.user\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.errorMsg\r\n      // state.erroeMsg = erroeMsg // 不要直接修改原本的状态数据\r\n      return { ...state, errorMsg }\r\n    case RESET_USER:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// product 用来管理商品的reducer函数\r\nfunction product(state={},action){\r\n  switch (action.type){\r\n    case ADD_PRODUCT:\r\n      return action.product\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  headTitle,\r\n  user,\r\n  product\r\n})","/*\r\nredux的核心模块store模块\r\n*/\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\n// 引入reducer\r\nimport reducer from './reducer'\r\n\r\n// 引入异步中间件\r\nimport thunk from 'redux-thunk'\r\n\r\n// 引入浏览器工具插件\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n// 创建store对象\r\nexport default createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)","/* \r\n入口js文件\r\n*/\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\n\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n), document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.d4667f46.png\";"],"sourceRoot":""}